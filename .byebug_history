c
click.class_name
class_name.click
class_name  = element.attribute('class').to_i
element.attribute('class').to_i.click
element.attribute('class').to_i
element.attribute('class')
c
class_name
element.attribute('class').to_i
element.attribute('class').methods.sort
element.attribute('class')
c
element.attribute("VfPpkd-RLmnJb")
driver.find_element(class: 'VfPpkd-RLmnJb')element.attribute("VfPpkd-RLmnJb")
class_name
driver.find_element(class: 'VfPpkd-RLmnJb').text
driver.find_element(class: 'VfPpkd-RLmnJb')
exit
    Config.login
config.log
exit
      login_page.log_in
      login_page = Config::LoginPage.new
      login_page = Config::Login
      login_page = Config::Login.new
      login_page = Login.new      login_page = Config::Login.new
      login_page = Login.new
self.login
Config::LoginPage.new
extend Config::LoginPage.new
extend Config::LoginPage.new(url: '')
extend Config::LoginPage.new(url:)
extend Config::LoginPage.new(url)
extend Config::LoginPage.new(url: 'https:www.')
extend Config::LoginPage.new()
extend Config::LoginPage.new
Config::LoginPage.new
c
load '/home/vasanthi/git/automation/lib/config.rb'
    config.class
    config.self
    config.methods
    config.login
 config = Config::Configuration.new
exit
Config
Config.login
 config = Config.new
exit
config.login
 config = Config.new
exit
 config = Config.new
c
 page.login_page.log_in('turneruser@turner.com', 'turnertest')
 page.login_page.log_in
 page.login_page
load '/home/vasanthi/git/automation/lib/config.rb'
 page.login_page
 page.log_page
page = Config.new
c
page.methods.sort
page = Config.new
load '/home/vasanthi/git/automation/lib/config.rb'
page = Config.new
exit
page.log_in('ee', 'sdsd', 'sds')
load '/home/vasanthi/git/automation/lib/config.rb'
page.log_in
page.@url
page.url
page
page.url
page.visit(page.url)
page.visit(@url)
page.visit(url)
page.text
page.find('input#signInFormUsername')
page.find('div')
page
page.username_field.set(user)
page = Config.new
load '/home/vasanthi/git/automation/lib/config.rb'
page.username_field.set(user)
page = Config.new
load '/home/vasanthi/git/automation/lib/config.rb'
page = Config.new()
page = Config.new(
page = Config.new()
load '/home/vasanthi/git/automation/lib/config.rb'
page = Config.new()
c
all('.title-span').find { |label| label.text == aggregate_tables }
c
span.not-selected-option.click
span.not-selected-option
aggregate_table.map{ |x| x.text}.downcase
aggregate_table.map{ |x| x.text}.select { |x| x.text == "AVERAGE"}
aggregate_table.map{ |x| x.text}
aggregate_table.select{ |x| x.text}
aggregate_table.select{ |x| x.text.downcase == "average"}
aggregate_table.select{ |x| x.text.downcase == "average"}.click
aggregate_table.select{ |x| x.text == "AVERAGE"}.click
aggregate_table.select{ |x| x.text == "AVERAGE"}
aggregate_table.map{ |x| x.text}
aggregate_table.select
aggregate_table.methods.sort
aggregate_table.text
aggregate_table
all('.title-span').map(&:text)
aggregate_table.click
c
all('.title-span').find { |label| label.text == aggregate_table }
c
all('.title-span').find {|x| x.text == sum/average}
all('.title-span').find {|x| x.text}.click
all('.title-span').find {|x| x.text}
all('.title-span')
all('.title-span').find { |label| label.text == sum }
exit
 all('.title-span').text
 all('.title-span')
 all('.title-span').find { |label| label.text == name }
item = all('.title-span').find { |label| label.text == name }
aggregate_table.click
footer['data-sortvalue'].to_i
footer['data-sortvalue'].to_
footer
var
fan_growth.map {|x| x['title'].delete(',').to_i}.sum
var
exit
fan_growth.map {|x| x['title'].delete(',').to_i}.(sum/6)
fan_growth.map {|x| x['title'].delete(',').to_i}.sum/6
fan_growth.map {|x| x['title'].delete(',').to_i}.mean
fan_growth.map {|x| x['title'].delete(',').to_i}.methods.sort
fan_growth.map {|x| x['title'].delete(',').to_i}.average
fan_growth.map {|x| x['title'].delete(',').to_i}.avg
fan_growth.map {|x| x['title'].delete(',').to_i}
fan_growth.map {|x| x['title'].delete(',')}.average
fan_growth.map {|x| x['title'].delete(',')}.avg
fan_growth.map {|x| x['title'].delete(',')}
fan_growth.map {|x| x['title']
fan_growth.map {|x| x['title'].delete(',')
fan_growth
fan_growth.map {|x| x['title'].delete(',')
c
footer['title'].to_i
footer['data-sortvalue'].to_i
footer
c
fan_growth.map {|x| x['title'].delete(',').to_i}.sum
footer
footer['data-sortvalue'].to_i
c
aggregate_table.click
footer['data-sortvalue']
c
footer['data-sortvalue']
footer['data-sortvalue]
footer.text
c
fan_growth.map {|x| x['title']}c
fan_growth.map {|x| x['title']}
fan_growth.map {|x| x('title')}
fan_growth.map {|x| x['title']}
fan_growth.map {|x| x.['title']}
fan_growth.map {|x| x.['title]'}
fan_growth.map {|x| x.('title')}
fan_growth.map {|x| x.text}
fan_growth
fan_growth.map {|x| x.title.delete(',').to_i}.sum
fan_growth.map {|x| x.['title'].delete(',').to_i}.sum
fan_growth.map {|x| x.[title].delete(',').to_i}.sum
fan_growth.map { {|x| x.[title]}.delete(',').to_i}.sum
fan_growth.map { {|x| x.(title)}.delete(',').to_i}.sum
fan_growth.map { {|x| x.title}.delete(',').to_i}.sum
fan_growth.map ({|x| x.title}.delete(',').to_i).sum
fan_growth.map {|x| x.title}.delete(',').to_i.sum
fan_growth.map { |x| x['title'].delete(',').to_i}.sum
fan_growth.map { |x| x['title'].delete(',').to_i}
fan_growth.map { |x| x['title'].delete(',')}
fan_growth.map { |x| x['title'].to_i}
fan_growth.map { |value| value['title'].to_i}
fan_growth.map { |value| value['title'].to_i
fan_growth.map { |value| value['title']}.sum
fan_growth.map { |value| value['title']}
fan_growth.map { |value| value['title']
fan_growth.map { |value| value['title'].delete(',').to_i }.sum
fan_growth.to_i
fan_growth.text
fan_growth
fan_growth.map {|x| x.text}
fan_growth.map {|x| x.text}.to_i.sum
c
brand_listing.aggregate_functions.fan_growth_agg_value
brand_listing.aggregate_table.fan_growth_agg_value
c
aggregate_table
brand_listing.aggregate_table.fan_growth_agg_value
brand_listing
c
aggregate_table
brand_listing_page
c
obj.display_count
obj.clear_filter
obj.title
obj.total_count
obj.display_count
c
obj.display_count
c
n
s
filter.set
filter.set(name)
filter.set('')
filter.set(name)
name
filter.set("d")
filter
filter.text
filter
name
c
filter.set(nil)
filter.set(name)
name
filer
c
filter.text.set(name)
filter.text
filter.set(name)
filter.set(name).downcase
filter.downcase.set(name)
filter.set(name)
filter.text.set(name)
filter
filter.set(name)
filter.set(name.text)
filter.set(name.downcase)
filter.set(name).text
filter.set(name)
name
c
name
filter.set(name)
fiter.set
fiter.set(name)
filter
rows.count
rows
c
