c
all('.title-span').find { |label| label.text == aggregate_tables }
c
span.not-selected-option.click
span.not-selected-option
aggregate_table.map{ |x| x.text}.downcase
aggregate_table.map{ |x| x.text}.select { |x| x.text == "AVERAGE"}
aggregate_table.map{ |x| x.text}
aggregate_table.select{ |x| x.text}
aggregate_table.select{ |x| x.text.downcase == "average"}
aggregate_table.select{ |x| x.text.downcase == "average"}.click
aggregate_table.select{ |x| x.text == "AVERAGE"}.click
aggregate_table.select{ |x| x.text == "AVERAGE"}
aggregate_table.map{ |x| x.text}
aggregate_table.select
aggregate_table.methods.sort
aggregate_table.text
aggregate_table
all('.title-span').map(&:text)
aggregate_table.click
c
all('.title-span').find { |label| label.text == aggregate_table }
c
all('.title-span').find {|x| x.text == sum/average}
all('.title-span').find {|x| x.text}.click
all('.title-span').find {|x| x.text}
all('.title-span')
all('.title-span').find { |label| label.text == sum }
exit
 all('.title-span').text
 all('.title-span')
 all('.title-span').find { |label| label.text == name }
item = all('.title-span').find { |label| label.text == name }
aggregate_table.click
footer['data-sortvalue'].to_i
footer['data-sortvalue'].to_
footer
var
fan_growth.map {|x| x['title'].delete(',').to_i}.sum
var
exit
fan_growth.map {|x| x['title'].delete(',').to_i}.(sum/6)
fan_growth.map {|x| x['title'].delete(',').to_i}.sum/6
fan_growth.map {|x| x['title'].delete(',').to_i}.mean
fan_growth.map {|x| x['title'].delete(',').to_i}.methods.sort
fan_growth.map {|x| x['title'].delete(',').to_i}.average
fan_growth.map {|x| x['title'].delete(',').to_i}.avg
fan_growth.map {|x| x['title'].delete(',').to_i}
fan_growth.map {|x| x['title'].delete(',')}.average
fan_growth.map {|x| x['title'].delete(',')}.avg
fan_growth.map {|x| x['title'].delete(',')}
fan_growth.map {|x| x['title']
fan_growth.map {|x| x['title'].delete(',')
fan_growth
fan_growth.map {|x| x['title'].delete(',')
c
footer['title'].to_i
footer['data-sortvalue'].to_i
footer
c
fan_growth.map {|x| x['title'].delete(',').to_i}.sum
footer
footer['data-sortvalue'].to_i
c
aggregate_table.click
footer['data-sortvalue']
c
footer['data-sortvalue']
footer['data-sortvalue]
footer.text
c
fan_growth.map {|x| x['title']}c
fan_growth.map {|x| x['title']}
fan_growth.map {|x| x('title')}
fan_growth.map {|x| x['title']}
fan_growth.map {|x| x.['title']}
fan_growth.map {|x| x.['title]'}
fan_growth.map {|x| x.('title')}
fan_growth.map {|x| x.text}
fan_growth
fan_growth.map {|x| x.title.delete(',').to_i}.sum
fan_growth.map {|x| x.['title'].delete(',').to_i}.sum
fan_growth.map {|x| x.[title].delete(',').to_i}.sum
fan_growth.map { {|x| x.[title]}.delete(',').to_i}.sum
fan_growth.map { {|x| x.(title)}.delete(',').to_i}.sum
fan_growth.map { {|x| x.title}.delete(',').to_i}.sum
fan_growth.map ({|x| x.title}.delete(',').to_i).sum
fan_growth.map {|x| x.title}.delete(',').to_i.sum
fan_growth.map { |x| x['title'].delete(',').to_i}.sum
fan_growth.map { |x| x['title'].delete(',').to_i}
fan_growth.map { |x| x['title'].delete(',')}
fan_growth.map { |x| x['title'].to_i}
fan_growth.map { |value| value['title'].to_i}
fan_growth.map { |value| value['title'].to_i
fan_growth.map { |value| value['title']}.sum
fan_growth.map { |value| value['title']}
fan_growth.map { |value| value['title']
fan_growth.map { |value| value['title'].delete(',').to_i }.sum
fan_growth.to_i
fan_growth.text
fan_growth
fan_growth.map {|x| x.text}
fan_growth.map {|x| x.text}.to_i.sum
c
brand_listing.aggregate_functions.fan_growth_agg_value
brand_listing.aggregate_table.fan_growth_agg_value
c
aggregate_table
brand_listing.aggregate_table.fan_growth_agg_value
brand_listing
c
aggregate_table
brand_listing_page
c
obj.display_count
obj.clear_filter
obj.title
obj.total_count
obj.display_count
c
obj.display_count
c
n
s
filter.set
filter.set(name)
filter.set('')
filter.set(name)
name
filter.set("d")
filter
filter.text
filter
name
c
filter.set(nil)
filter.set(name)
name
filer
c
filter.text.set(name)
filter.text
filter.set(name)
filter.set(name).downcase
filter.downcase.set(name)
filter.set(name)
filter.text.set(name)
filter
filter.set(name)
filter.set(name.text)
filter.set(name.downcase)
filter.set(name).text
filter.set(name)
name
c
name
filter.set(name)
fiter.set
fiter.set(name)
filter
rows.count
rows
c
total_count
rows
c
    header.gsub(/SHOWING (\d+) OF (\d+) BRANDS/, '\2')
header
    header = count_tile.text
header
count_tile.text.downcase
count_tile.text
c
 header.gsub(/SHOWING (\d+) OF (\d+) BRANDS/, '\1')
header
find('div.dataTables_info').text
header
c
header.gsub(/SHOWING (\d+) OF (\d+) BRANDS/, '\1')
header.gsub(/SHOWING (\d+) OF (\d+) BRANDS/, '\3')
header.gsub(/SHOWING (\d+) OF (\d+) BRANDS/, '')
header.gsub(/SHOWING (\d+) OF (\d+) BRANDS/, '\2')
header.gsub(/SHOWING (\d+) OF (\d+) BRANDS/, '\1')
header = find('div.dataTables_info').text
find('div.dataTables_info').text
exit
brand_list.any?{|el| el.brand?(name)}
brand_list[0].brand_title
brand_list[0]
brand_list
brand_list.map{|a| a.text}
c
item
exit
item
menu_items.find{ |el|  el.text == name}
click.item
item
menu_items.find{ |el|  el.text == name}.text
menu_items.find{ |el|  el.text == name}
name
menu_items
item
menu_items.find{ |el|  el.text == name}
menu_items.find{ |el|  el.text == name
name
menu_items
item
brand_list
c
brand_list.map {|x| x.text}
brand_list
name
brand_list.map {|x| x.text}.map.any?(name)
brand_list.map {|x| x.text}.map.any?(name.downcase)
brand_list.map {|x| x.text}.any?(name.downcase)
brand_list.map {|x| x.text}.downcase
name
brand_list.map {|x| x.text}.any?(name)
brand_list.map {|x| x.text}.any?brand(name)
brand_list.map {|x| x.text}
brand_list.text
brand_list.map {|x| x.text}
 brand_list.map { |el| el.text }.any?{|el| el.brand?(name)}
brand_list
c
item.text
item
name
item = menu_items.find{ |el|  el.text == name}
menu_items.map {|x| x.text}
menu_items.text
menu_items
item
brand_list
c
name
 brand_list.map { |el| el.text }.any?(name)
 brand_list.map { |el| el.text }.any?{|el| el.brand?(name)}
brand_list
item.click
item = menu_items.find{ |el|  el.text == name}
menu_items
brand_list
name
item
c
name
item
item = menu_items.find{ |el|  el.text == name}
item
c
counter
c
(brand_title.text.downcase).has.(name.downcase)?
(brand_title.text).has.name?(name).downcase
